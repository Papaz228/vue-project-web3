{"ast":null,"code":"import { createStore } from \"vuex\";\nimport { ethers } from \"ethers\";\nlet USER_PROFILE_ABI = [{\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"newSkill\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"addSkill\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"_name\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"_contactInfo\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"_socialLinks\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"createProfile\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"getAllUserProfiles\",\n  \"outputs\": [{\n    \"components\": [{\n      \"internalType\": \"string\",\n      \"name\": \"name\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"contactInformation\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"socialLinks\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"userProfileAddress\",\n      \"type\": \"address\"\n    }],\n    \"internalType\": \"struct UserProfile.Profile[]\",\n    \"name\": \"\",\n    \"type\": \"tuple[]\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"_userProfileAddress\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"getUserSkillRatings\",\n  \"outputs\": [{\n    \"components\": [{\n      \"internalType\": \"address\",\n      \"name\": \"user\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"skillName\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"uint8\",\n      \"name\": \"rating\",\n      \"type\": \"uint8\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"comment\",\n      \"type\": \"string\"\n    }],\n    \"internalType\": \"struct UserProfile.SkillRate[]\",\n    \"name\": \"\",\n    \"type\": \"tuple[]\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"getUserSkills\",\n  \"outputs\": [{\n    \"internalType\": \"string[]\",\n    \"name\": \"\",\n    \"type\": \"string[]\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"profiles\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"name\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"contactInformation\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"socialLinks\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"userProfileAddress\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"_skillName\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"uint8\",\n    \"name\": \"_rating\",\n    \"type\": \"uint8\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"_comment\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"targetUser\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"rateSkill\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}];\n//import {SKILL_CONFIRMATION_ABI} from \"@/contracts/SkillConfirmation.abi.js\"\n// import {TRUST_NETWORK_ABI} from \"@/contracts/TrustNetwork.abi.js\"\n\n//const skillConfirmationAddress = \"\"\nconst userProfileAddress = \"0xddAce096b2C2F7E871Bf5FaB393D566D7C885C9d\";\nlet UserProfileContract = new ethers.Contract(userProfileAddress, USER_PROFILE_ABI);\n// const trustNetworkAddress = \"\"\n\nexport default createStore({\n  state: {\n    provider: {},\n    chainId: {},\n    signer: {},\n    //UserProfileContract: {},\n    //SkillConfirmationContract: {},\n    //TrustNetworkContract: {},\n\n    userProfile: {},\n    userAddress: \"\",\n    skillRequests: [],\n    userProfiles: []\n  },\n  getters: {},\n  mutations: {},\n  actions: {\n    async connectWallet({\n      state\n    }) {\n      if (typeof window.ethereum !== 'undefined') {\n        console.log(\"Etherium client installed!\");\n        if (window.ethereum.isMetaMask === true) {\n          console.log(\"MetaMask connected!\");\n          if (window.ethereum.isConnected() !== true) {\n            console.log(\"MetaMask is not connected!\");\n            await window.ethereum.enable();\n          }\n          console.log(\"MetaMask connected\");\n          state.provider = new ethers.providers.Web3Provider(window.ethereum);\n          state.signer = await state.provider.getSigner();\n          state.userAddress = await state.signer.getAddress();\n          state.chainId = await window.ethereum.request({\n            method: \"eth_chainId\"\n          });\n          UserProfileContract = UserProfileContract.connect(state.signer);\n          await UserProfileContract.getAllUserProfiles().then(console.log);\n          //state.SkillConfirmationContract = new ethers.Contract(skillConfirmationAddress, SKILL_CONFIRMATION_ABI, state.signer);\n          //state.TrusNetworkContract = new ethers.Contract(trustNetworkAddress, TRUST_NETWORK_ABI, state.signer);\n\n          console.log(\"chainId: \", state.chainId);\n          window.ethereum.on(\"accountsChanged\", async () => {\n            state.userAddress = await state.signer.getAddress();\n            console.log(`Accounts changed to ${state.address}`);\n          });\n          window.ethereum.on(\"chainChanged\", async () => {\n            state.provider = new ethers.providers.Web3Provider(window.ethereum);\n            state.chainId = await window.ethereum.request({\n              method: \"eth_chainId\"\n            });\n            state.signer = await state.provider.getSigner();\n            state.userAddress = await state.signer.getAddress();\n            UserProfileContract = UserProfileContract.connect(state.signer);\n            //state.SkillConfirmationContract = new ethers.Contract(skillConfirmationAddress, SKILL_CONFIRMATION_ABI, state.signer);\n            //state.TrusNetworkContract = new ethers.Contract(trustNetworkAddress, TRUST_NETWORK_ABI, state.signer);\n            console.log(\"chainId changed to \", state.chainId);\n          });\n        } else {\n          alert(\"Metamask is not installed!\");\n        }\n      } else {\n        alert(\"Ethereum client is not installed!\");\n      }\n    },\n    // Действия для взаимодействия с контрактами Ethereum\n    async createProfile(name, contactInfo, socialLinks) {\n      try {\n        const tx = await UserProfileContract.createProfile(name, contactInfo, socialLinks);\n        await tx.wait();\n        return true;\n      } catch (error) {\n        console.error(\"Error creating profile:\", error);\n        return false;\n      }\n    },\n    async rateSkill({\n      skillName,\n      rating,\n      comment,\n      targetUser\n    }) {\n      try {\n        const tx = await UserProfileContract.rateSkill(skillName, rating, comment, targetUser);\n        await tx.wait();\n        return true;\n      } catch (error) {\n        console.error(\"Error rating skill:\", error);\n        return false;\n      }\n    },\n    async fetchUserProfile({\n      state\n    }, address) {\n      try {\n        const profile = await UserProfileContract.profiles(address);\n        state.userProfile = profile;\n      } catch (error) {\n        console.error(\"Error fetching user profile:\", error);\n      }\n    },\n    async fetchAllUserSkills(address) {\n      try {\n        const skills = await UserProfileContract.getUserSkills(address);\n        const uniqueSkills = skills.filter((value, index) => skills.indexOf(value) === index);\n        return uniqueSkills;\n      } catch (error) {\n        console.error(\"Error fetching skills:\", error);\n      }\n    },\n    async fetchAllUserProfiles({\n      state\n    }) {\n      try {\n        const users = await UserProfileContract.getAllUserProfiles();\n        state.userProfiles = users;\n      } catch (error) {\n        console.error(\"Error fetching user profiles:\", error);\n      }\n    },\n    async fetchAllUserRatings(address) {\n      try {\n        const ratings = await UserProfileContract.getUserSkillRatings(address);\n        return ratings;\n      } catch (error) {\n        console.error(\"Error fetching ratings:\", error);\n      }\n    },\n    async getUserSkillRatingsAverage(userProfileAddress) {\n      try {\n        const ratings = await UserProfileContract.getUserSkillRatings(userProfileAddress);\n        let totalRating = 0;\n        let ratingCount = 0;\n        for (const rating of ratings) {\n          totalRating += rating.rating;\n          ratingCount++;\n        }\n        const averageRating = ratingCount > 0 ? totalRating / ratingCount : 0;\n        return averageRating;\n      } catch (error) {\n        console.error(\"Error fetching user skill ratings:\", error);\n        return 0;\n      }\n    }\n    // async requestConfirmation({ state }, { confirmatorAddress, skillName }) {\n    //   try {\n    //     const tx = await state.SkillConfirmationContract.requestConfirmation(confirmatorAddress, skillName);\n    //     await tx.wait();\n    //     // Обновить skillRequests после успешной транзакции\n    //     const requests = await state.SkillConfirmationContract.getSkillRequestsByAddress(confirmatorAddress);\n    //     state.skillRequests = requests;\n    //     return true;\n    //   } catch (error) {\n    //     console.error(\"Error requesting confirmation:\", error);\n    //     return false;\n    //   }\n    // },\n    // async confirmSkill({ state }, requestIndex) {\n    //   try {\n    //     const tx = await state.SkillConfirmationContract.confirmSkill(requestIndex);\n    //     await tx.wait();\n    //     // Обновить skillRequests после успешной транзакции\n    //     const requests = await state.SkillConfirmationContract.getSkillRequestsByAddress(state.userAddress);\n    //     state.skillRequests = requests;\n    //     return true;\n    //   } catch (error) {\n    //     console.error(\"Error confirming skill:\", error);\n    //     return false;\n    //   }\n    // },\n  },\n\n  modules: {}\n});","map":{"version":3,"names":["createStore","ethers","USER_PROFILE_ABI","userProfileAddress","UserProfileContract","Contract","state","provider","chainId","signer","userProfile","userAddress","skillRequests","userProfiles","getters","mutations","actions","connectWallet","window","ethereum","console","log","isMetaMask","isConnected","enable","providers","Web3Provider","getSigner","getAddress","request","method","connect","getAllUserProfiles","then","on","address","alert","createProfile","name","contactInfo","socialLinks","tx","wait","error","rateSkill","skillName","rating","comment","targetUser","fetchUserProfile","profile","profiles","fetchAllUserSkills","skills","getUserSkills","uniqueSkills","filter","value","index","indexOf","fetchAllUserProfiles","users","fetchAllUserRatings","ratings","getUserSkillRatings","getUserSkillRatingsAverage","totalRating","ratingCount","averageRating","modules"],"sources":["/home/alan/VisualStudioProjects/BU/vue-proj1/src/store/index.js"],"sourcesContent":["import {createStore} from \"vuex\"\nimport { ethers } from \"ethers\";\n\nlet USER_PROFILE_ABI = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newSkill\",\"type\":\"string\"}],\"name\":\"addSkill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contactInfo\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_socialLinks\",\"type\":\"string\"}],\"name\":\"createProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUserProfiles\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactInformation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"socialLinks\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userProfileAddress\",\"type\":\"address\"}],\"internalType\":\"struct UserProfile.Profile[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userProfileAddress\",\"type\":\"address\"}],\"name\":\"getUserSkillRatings\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"skillName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"rating\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"internalType\":\"struct UserProfile.SkillRate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserSkills\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"profiles\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactInformation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"socialLinks\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userProfileAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_skillName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_rating\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_comment\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"targetUser\",\"type\":\"address\"}],\"name\":\"rateSkill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];\n//import {SKILL_CONFIRMATION_ABI} from \"@/contracts/SkillConfirmation.abi.js\"\n// import {TRUST_NETWORK_ABI} from \"@/contracts/TrustNetwork.abi.js\"\n\n\n//const skillConfirmationAddress = \"\"\nconst userProfileAddress = \"0xddAce096b2C2F7E871Bf5FaB393D566D7C885C9d\"\nlet UserProfileContract = new ethers.Contract(userProfileAddress, USER_PROFILE_ABI)\n// const trustNetworkAddress = \"\"\n\nexport default createStore({\n  state:{\n    provider:{},\n    chainId:{},\n    signer:{},\n\n    //UserProfileContract: {},\n    //SkillConfirmationContract: {},\n    //TrustNetworkContract: {},\n\n    \n    userProfile: {},\n    userAddress:\"\",\n\n    skillRequests: [],\n    userProfiles: []\n  },\n\n  getters:{\n  },\n\n  mutations:{\n  },\n\n  actions:{\n    async connectWallet({state}) {\n      if (typeof window.ethereum !== 'undefined') {\n          console.log(\"Etherium client installed!\");\n          if (window.ethereum.isMetaMask === true) {\n              console.log(\"MetaMask connected!\");\n              if (window.ethereum.isConnected() !== true) {\n                  console.log(\"MetaMask is not connected!\");\n                  await window.ethereum.enable();\n              }\n      console.log(\"MetaMask connected\");\n      state.provider = new ethers.providers.Web3Provider(window.ethereum);\n      state.signer = await state.provider.getSigner();\n      state.userAddress = await state.signer.getAddress()\n\n      state.chainId = await window.ethereum.request({ method: \"eth_chainId\" });\n\n      UserProfileContract = UserProfileContract.connect(state.signer);\n      await UserProfileContract.getAllUserProfiles().then(console.log)\n     //state.SkillConfirmationContract = new ethers.Contract(skillConfirmationAddress, SKILL_CONFIRMATION_ABI, state.signer);\n      //state.TrusNetworkContract = new ethers.Contract(trustNetworkAddress, TRUST_NETWORK_ABI, state.signer);\n\n      console.log(\"chainId: \", state.chainId);\n\n      window.ethereum.on(\"accountsChanged\", async () => {\n        state.userAddress = await state.signer.getAddress()\n        console.log(`Accounts changed to ${state.address}`);\n      })\n\n      window.ethereum.on(\"chainChanged\", async () => {\n          state.provider = new ethers.providers.Web3Provider(window.ethereum);\n          state.chainId = await window.ethereum.request({ method: \"eth_chainId\" });\n          state.signer = await state.provider.getSigner();\n          state.userAddress = await state.signer.getAddress()\n          UserProfileContract = UserProfileContract.connect(state.signer);\n          //state.SkillConfirmationContract = new ethers.Contract(skillConfirmationAddress, SKILL_CONFIRMATION_ABI, state.signer);\n          //state.TrusNetworkContract = new ethers.Contract(trustNetworkAddress, TRUST_NETWORK_ABI, state.signer);\n          console.log(\"chainId changed to \", state.chainId);\n      })\n          } else {\n              alert (\"Metamask is not installed!\")\n          }\n      } else {\n          alert (\"Ethereum client is not installed!\")\n      }\n    \n  },\n    // Действия для взаимодействия с контрактами Ethereum\n      async createProfile( name, contactInfo, socialLinks) {\n        try {\n          const tx = await UserProfileContract.createProfile(name, contactInfo, socialLinks);\n          await tx.wait();\n          return true;\n        } catch (error) {\n          console.error(\"Error creating profile:\", error);\n          return false;\n        }\n      },\n      async rateSkill({ skillName, rating, comment, targetUser }) {\n        try {\n          const tx = await UserProfileContract.rateSkill(skillName, rating, comment, targetUser);\n          await tx.wait();\n          return true;\n        } catch (error) {\n          console.error(\"Error rating skill:\", error);\n          return false;\n        }\n      },\n      async fetchUserProfile({ state }, address) {\n        try {\n          const profile = await UserProfileContract.profiles(address);\n          state.userProfile = profile;\n        } catch (error) {\n          console.error(\"Error fetching user profile:\", error);\n        }\n      },\n      async fetchAllUserSkills( address) {\n        try{\n          const skills = await UserProfileContract.getUserSkills(address);\n          const uniqueSkills = skills.filter((value, index) => skills.indexOf(value) === index);\n          return uniqueSkills;\n        } catch (error) {\n              console.error(\"Error fetching skills:\", error);\n            }\n      },\n      async fetchAllUserProfiles({state}){\n        try{\n          const users = await UserProfileContract.getAllUserProfiles();\n          \n          state.userProfiles = users;\n        } catch (error) {\n          console.error(\"Error fetching user profiles:\", error);\n        }\n      },\n      async fetchAllUserRatings( address) {\n        try{\n          const ratings = await UserProfileContract.getUserSkillRatings(address);\n          return ratings;\n        } catch (error) {\n              console.error(\"Error fetching ratings:\", error);\n        }\n      },\n      async getUserSkillRatingsAverage(userProfileAddress) {\n        try {\n          const ratings = await UserProfileContract.getUserSkillRatings(userProfileAddress);\n          let totalRating = 0;\n          let ratingCount = 0;\n      \n          for (const rating of ratings) {\n            totalRating += rating.rating;\n            ratingCount++;\n          }\n      \n          const averageRating = ratingCount > 0 ? totalRating / ratingCount : 0;\n      \n          return averageRating;\n        } catch (error) {\n          console.error(\"Error fetching user skill ratings:\", error);\n          return 0;\n        }\n      },\n       // async requestConfirmation({ state }, { confirmatorAddress, skillName }) {\n      //   try {\n      //     const tx = await state.SkillConfirmationContract.requestConfirmation(confirmatorAddress, skillName);\n      //     await tx.wait();\n      //     // Обновить skillRequests после успешной транзакции\n      //     const requests = await state.SkillConfirmationContract.getSkillRequestsByAddress(confirmatorAddress);\n      //     state.skillRequests = requests;\n      //     return true;\n      //   } catch (error) {\n      //     console.error(\"Error requesting confirmation:\", error);\n      //     return false;\n      //   }\n      // },\n      // async confirmSkill({ state }, requestIndex) {\n      //   try {\n      //     const tx = await state.SkillConfirmationContract.confirmSkill(requestIndex);\n      //     await tx.wait();\n      //     // Обновить skillRequests после успешной транзакции\n      //     const requests = await state.SkillConfirmationContract.getSkillRequestsByAddress(state.userAddress);\n      //     state.skillRequests = requests;\n      //     return true;\n      //   } catch (error) {\n      //     console.error(\"Error confirming skill:\", error);\n      //     return false;\n      //   }\n      // },\n      \n  },\n\n  modules:{\n\n  }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}