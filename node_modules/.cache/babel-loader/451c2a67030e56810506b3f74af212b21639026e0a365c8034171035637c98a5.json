{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeOwlA = void 0;\nconst index_js_1 = require(\"../utils/index.js\");\nconst bit_reader_js_1 = require(\"./bit-reader.js\");\nconst decode_owl_js_1 = require(\"./decode-owl.js\");\n/**\n *  @_ignore\n */\nfunction decodeOwlA(data, accents) {\n  let words = (0, decode_owl_js_1.decodeOwl)(data).join(\",\");\n  // Inject the accents\n  accents.split(/,/g).forEach(accent => {\n    const match = accent.match(/^([a-z]*)([0-9]+)([0-9])(.*)$/);\n    (0, index_js_1.assertArgument)(match !== null, \"internal error parsing accents\", \"accents\", accents);\n    let posOffset = 0;\n    const positions = (0, bit_reader_js_1.decodeBits)(parseInt(match[3]), match[4]);\n    const charCode = parseInt(match[2]);\n    const regex = new RegExp(`([${match[1]}])`, \"g\");\n    words = words.replace(regex, (all, letter) => {\n      const rem = --positions[posOffset];\n      if (rem === 0) {\n        letter = String.fromCharCode(letter.charCodeAt(0), charCode);\n        posOffset++;\n      }\n      return letter;\n    });\n  });\n  return words.split(\",\");\n}\nexports.decodeOwlA = decodeOwlA;","map":{"version":3,"sources":["../../src.ts/wordlists/decode-owla.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,UAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;AAEA,MAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AACA,MAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AAEA;;AAEG;AACH,SAAgB,UAAU,CAAC,IAAY,EAAE,OAAe,EAAA;EACpD,IAAI,KAAK,GAAG,CAAA,CAAA,EAAA,eAAA,CAAA,SAAS,EAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;EAErC;EACA,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAE,MAAM,IAAI;IAEnC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,+BAA+B,CAAC;IAC3D,CAAA,CAAA,EAAA,UAAA,CAAA,cAAc,EAAC,KAAK,KAAK,IAAI,EAAE,gCAAgC,EAAE,SAAS,EAAE,OAAO,CAAC;IAEpF,IAAI,SAAS,GAAG,CAAC;IACjB,MAAM,SAAS,GAAG,CAAA,CAAA,EAAA,eAAA,CAAA,UAAU,EAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1D,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,KAAM,KAAK,CAAC,CAAC,CAAE,IAAI,EAAE,GAAG,CAAC;IAClD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,MAAM,KAAI;MACzC,MAAM,GAAG,GAAG,EAAE,SAAS,CAAC,SAAS,CAAC;MAClC,IAAI,GAAG,KAAK,CAAC,EAAE;QACX,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC;QAC5D,SAAS,EAAE;MACd;MACD,OAAO,MAAM;IACjB,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;AAC3B;AAxBA,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeOwlA = void 0;\nconst index_js_1 = require(\"../utils/index.js\");\nconst bit_reader_js_1 = require(\"./bit-reader.js\");\nconst decode_owl_js_1 = require(\"./decode-owl.js\");\n/**\n *  @_ignore\n */\nfunction decodeOwlA(data, accents) {\n    let words = (0, decode_owl_js_1.decodeOwl)(data).join(\",\");\n    // Inject the accents\n    accents.split(/,/g).forEach((accent) => {\n        const match = accent.match(/^([a-z]*)([0-9]+)([0-9])(.*)$/);\n        (0, index_js_1.assertArgument)(match !== null, \"internal error parsing accents\", \"accents\", accents);\n        let posOffset = 0;\n        const positions = (0, bit_reader_js_1.decodeBits)(parseInt(match[3]), match[4]);\n        const charCode = parseInt(match[2]);\n        const regex = new RegExp(`([${match[1]}])`, \"g\");\n        words = words.replace(regex, (all, letter) => {\n            const rem = --positions[posOffset];\n            if (rem === 0) {\n                letter = String.fromCharCode(letter.charCodeAt(0), charCode);\n                posOffset++;\n            }\n            return letter;\n        });\n    });\n    return words.split(\",\");\n}\nexports.decodeOwlA = decodeOwlA;\n//# sourceMappingURL=decode-owla.js.map"]},"metadata":{},"sourceType":"script","externalDependencies":[]}