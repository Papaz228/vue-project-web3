{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5b1b86cc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"upload-diploma\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"upload-label\"\n}, \"Upload File:\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"input\", {\n    class: \"file-input\",\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    accept: \".pdf, .png, .jpg, .jpeg\"\n  }, null, 32 /* HYDRATE_EVENTS */), _withDirectives(_createElementVNode(\"input\", {\n    class: \"user-input\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.targetUser = $event),\n    type: \"text\",\n    placeholder: \"Enter target user address\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.targetUser]]), _createElementVNode(\"button\", {\n    class: \"upload-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.uploadDiploma && $options.uploadDiploma(...args)),\n    disabled: !$data.diplomaFile\n  }, \"Upload Diploma\", 8 /* PROPS */, _hoisted_3)]);\n}","map":{"version":3,"sources":["/home/alan/VisualStudioProjects/BU/vue-proj1/src/pages/AddDiplomaToUserPage.vue"],"names":[],"mappings":";;;EACS,KAAK,EAAC;AAAgB,CAAA;gEACzB,mBAAA,CAAgD,OAAA,EAAA;EAAzC,KAAK,EAAC;AAAc,CAAA,EAAC,cAAY,EAAA,CAAA,CAAA,CAAA,cAAA,CAAA;;;uBAD1C,mBAAA,CAKM,KAAA,EALN,UAKM,EAAA,CAJJ,UAAgD,EAChD,mBAAA,CAAgG,OAAA,EAAA;IAAzF,KAAK,EAAC,YAAY;IAAC,IAAI,EAAC,MAAM;IAAE,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,IAAA,KAAE,QAAA,CAAA,YAAA,IAAA,QAAA,CAAA,YAAA,CAAA,GAAA,IAAA,CAAY,CAAA;IAAE,MAAM,EAAC;qDACpE,mBAAA,CAAqG,OAAA,EAAA;IAA9F,KAAK,EAAC,YAAY;+DAAU,KAAA,CAAA,UAAU,GAAA,MAAA,CAAA;IAAE,IAAI,EAAC,MAAM;IAAC,WAAW,EAAC;iDAApC,KAAA,CAAA,UAAU,CAAA,C,GAC7C,mBAAA,CAAqG,QAAA,EAAA;IAA7F,KAAK,EAAC,eAAe;IAAE,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,IAAA,KAAE,QAAA,CAAA,aAAA,IAAA,QAAA,CAAA,aAAA,CAAA,GAAA,IAAA,CAAa,CAAA;IAAG,QAAQ,EAAA,CAAG,KAAA,CAAA;KAAa,gBAAc,EAAA,CAAA,CAAA,aAAA,UAAA,CAAA,C","sourcesContent":["<template>\n    <div class=\"upload-diploma\">\n      <label class=\"upload-label\">Upload File:</label>\n      <input class=\"file-input\" type=\"file\" @change=\"onFileChange\" accept=\".pdf, .png, .jpg, .jpeg\" />\n      <input class=\"user-input\" v-model=\"targetUser\" type=\"text\" placeholder=\"Enter target user address\" />\n      <button class=\"upload-button\" @click=\"uploadDiploma\" :disabled=\"!diplomaFile\">Upload Diploma</button>\n    </div>\n  </template>\n  \n  <script>\n  import { mapActions } from 'vuex';\n  \n  export default {\n    data() {\n      return {\n        diplomaFile: null,\n        targetUser: '',\n      };\n    },\n    methods: {\n      ...mapActions(['saveAndMintNft']),\n      async uploadDiploma() {\n        try {\n          // Read the diploma file\n          const reader = new FileReader();\n          reader.onload = async () => {\n            const diplomaData = new Uint8Array(reader.result);\n            // Upload the diploma file to Pinata\n            const pinataAPIKey = '8eb6f3db6916d3c7ecba';\n            const pinataAPISecret = 'e1d0c01b1788a502a6d279c81369788efef055fe1f4ba2ce339d6483263c380a';\n  \n            const formData = new FormData();\n            formData.append('file', new Blob([diplomaData]), this.diplomaFile.name);\n  \n            const response = await fetch('https://api.pinata.cloud/pinning/pinFileToIPFS', {\n              method: 'POST',\n              headers: {\n                pinata_api_key: pinataAPIKey,\n                pinata_secret_api_key: pinataAPISecret,\n              },\n              body: formData,\n            });\n  \n            if (response.ok) {\n              const data = await response.json();\n              const ipfsHash = data.IpfsHash;\n              // Process the IPFS hash as needed\n              await this.saveAndMintNft([ipfsHash, this.targetUser]);\n              console.log('IPFS Hash:', ipfsHash);\n            } else {\n              throw new Error('Error uploading diploma: ' + response.statusText);\n            }\n          };\n          reader.readAsArrayBuffer(this.diplomaFile);\n        } catch (error) {\n          console.error('Error uploading diploma:', error);\n        }\n      },\n      onFileChange(event) {\n        this.diplomaFile = event.target.files[0];\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .upload-diploma {\n    text-align: center;\n    margin-top: 20px;\n  }\n  \n  .upload-label {\n    display: block;\n    font-size: 18px;\n    margin-bottom: 10px;\n  }\n  \n  .file-input {\n    display: none;\n  }\n  \n  .user-input {\n    width: 300px;\n    padding: 8px;\n    font-size: 16px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    margin-bottom: 10px;\n  }\n  \n  .upload-button {\n    padding: 8px 16px;\n    font-size: 16px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n  \n  .upload-button:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n  </style>\n  "],"sourceRoot":""},"metadata":{},"sourceType":"module","externalDependencies":[]}