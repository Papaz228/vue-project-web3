{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateFieldInitSpec = require(\"/home/alan/VisualStudioProjects/BU/vue-proj1/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _defineProperty = require(\"/home/alan/VisualStudioProjects/BU/vue-proj1/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _classPrivateFieldGet = require(\"/home/alan/VisualStudioProjects/BU/vue-proj1/node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\").default;\nvar _classPrivateFieldSet = require(\"/home/alan/VisualStudioProjects/BU/vue-proj1/node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventPayload = void 0;\n/**\n *  Events allow for applications to use the observer pattern, which\n *  allows subscribing and publishing events, outside the normal\n *  execution paths.\n *\n *  @_section api/utils/events:Events  [about-events]\n */\nconst properties_js_1 = require(\"./properties.js\");\n/**\n *  When an [[EventEmitterable]] triggers a [[Listener]], the\n *  callback always ahas one additional argument passed, which is\n *  an **EventPayload**.\n */\nvar _listener = /*#__PURE__*/new WeakMap();\nclass EventPayload {\n  /**\n   *  The event filter.\n   */\n\n  /**\n   *  The **EventEmitterable**.\n   */\n\n  /**\n   *  Create a new **EventPayload** for %%emitter%% with\n   *  the %%listener%% and for %%filter%%.\n   */\n  constructor(emitter, listener, filter) {\n    _defineProperty(this, \"filter\", void 0);\n    _defineProperty(this, \"emitter\", void 0);\n    _classPrivateFieldInitSpec(this, _listener, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _listener, listener);\n    (0, properties_js_1.defineProperties)(this, {\n      emitter,\n      filter\n    });\n  }\n  /**\n   *  Unregister the triggered listener for future events.\n   */\n  async removeListener() {\n    if (_classPrivateFieldGet(this, _listener) == null) {\n      return;\n    }\n    await this.emitter.off(this.filter, _classPrivateFieldGet(this, _listener));\n  }\n}\nexports.EventPayload = EventPayload;","map":{"version":3,"sources":["../../src.ts/utils/events.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;AAMG;AACH,MAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AA+DA;;;;AAIG;AAJH,IAAA,SAAA,oBAAA,OAAA;AAKA,MAAa,YAAY,CAAA;EACrB;;AAEG;;EAGH;;AAEG;;EAKH;;;AAGG;EACH,WAAA,CAAY,OAA4B,EAAE,QAAyB,EAAE,MAAS,EAAA;IAAA,eAAA;IAAA,eAAA;IAAA,0BAAA,OAAA,SAAA;MAAA,QAAA;MAAA,KAAA;IAAA;IAC1E,qBAAA,KAAI,EAAA,SAAA,EAAa,QAAQ;IACzB,CAAA,CAAA,EAAA,eAAA,CAAA,gBAAgB,EAAoB,IAAI,EAAE;MAAE,OAAO;MAAE;IAAM,CAAE,CAAC;EAClE;EAEA;;AAEG;EACH,MAAM,cAAc,CAAA,EAAA;IAChB,IAAI,qBAAA,KAAI,EAAA,SAAA,KAAc,IAAI,EAAE;MAAE;IAAS;IACvC,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAA,qBAAA,CAAE,IAAI,EAAA,SAAA,EAAW;EACvD;AACH;AA7BD,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventPayload = void 0;\n/**\n *  Events allow for applications to use the observer pattern, which\n *  allows subscribing and publishing events, outside the normal\n *  execution paths.\n *\n *  @_section api/utils/events:Events  [about-events]\n */\nconst properties_js_1 = require(\"./properties.js\");\n/**\n *  When an [[EventEmitterable]] triggers a [[Listener]], the\n *  callback always ahas one additional argument passed, which is\n *  an **EventPayload**.\n */\nclass EventPayload {\n    /**\n     *  The event filter.\n     */\n    filter;\n    /**\n     *  The **EventEmitterable**.\n     */\n    emitter;\n    #listener;\n    /**\n     *  Create a new **EventPayload** for %%emitter%% with\n     *  the %%listener%% and for %%filter%%.\n     */\n    constructor(emitter, listener, filter) {\n        this.#listener = listener;\n        (0, properties_js_1.defineProperties)(this, { emitter, filter });\n    }\n    /**\n     *  Unregister the triggered listener for future events.\n     */\n    async removeListener() {\n        if (this.#listener == null) {\n            return;\n        }\n        await this.emitter.off(this.filter, this.#listener);\n    }\n}\nexports.EventPayload = EventPayload;\n//# sourceMappingURL=events.js.map"]},"metadata":{},"sourceType":"script","externalDependencies":[]}