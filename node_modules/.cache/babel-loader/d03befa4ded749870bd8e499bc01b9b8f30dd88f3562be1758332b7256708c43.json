{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/home/alan/VisualStudioProjects/BU/vue-proj1/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/home/alan/VisualStudioProjects/BU/vue-proj1/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldGet = require(\"/home/alan/VisualStudioProjects/BU/vue-proj1/node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\").default;\nvar _classPrivateFieldSet = require(\"/home/alan/VisualStudioProjects/BU/vue-proj1/node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Contract = exports.BaseContract = exports.resolveArgs = exports.copyOverrides = void 0;\nconst index_js_1 = require(\"../abi/index.js\");\nconst index_js_2 = require(\"../address/index.js\");\n// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nconst provider_js_1 = require(\"../providers/provider.js\");\nconst index_js_3 = require(\"../utils/index.js\");\nconst wrappers_js_1 = require(\"./wrappers.js\");\nconst BN_0 = BigInt(0);\nfunction canCall(value) {\n  return value && typeof value.call === \"function\";\n}\nfunction canEstimate(value) {\n  return value && typeof value.estimateGas === \"function\";\n}\nfunction canResolve(value) {\n  return value && typeof value.resolveName === \"function\";\n}\nfunction canSend(value) {\n  return value && typeof value.sendTransaction === \"function\";\n}\nvar _filter = /*#__PURE__*/new WeakMap();\nclass PreparedTopicFilter {\n  constructor(contract, fragment, args) {\n    _classPrivateFieldInitSpec(this, _filter, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"fragment\", void 0);\n    (0, index_js_3.defineProperties)(this, {\n      fragment\n    });\n    if (fragment.inputs.length < args.length) {\n      throw new Error(\"too many arguments\");\n    }\n    // Recursively descend into args and resolve any addresses\n    const runner = getRunner(contract.runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner : null;\n    _classPrivateFieldSet(this, _filter, async function () {\n      const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n        const arg = args[index];\n        if (arg == null) {\n          return null;\n        }\n        return param.walkAsync(args[index], (type, value) => {\n          if (type === \"address\") {\n            return (0, index_js_2.resolveAddress)(value, resolver);\n          }\n          return value;\n        });\n      }));\n      return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n    }());\n  }\n  getTopicFilter() {\n    return _classPrivateFieldGet(this, _filter);\n  }\n}\n// A = Arguments passed in as a tuple\n// R = The result type of the call (i.e. if only one return type,\n//     the qualified type, otherwise Result)\n// D = The type the default call will return (i.e. R for view/pure,\n//     TransactionResponse otherwise)\n//export interface ContractMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse> {\nfunction getRunner(value, feature) {\n  if (value == null) {\n    return null;\n  }\n  if (typeof value[feature] === \"function\") {\n    return value;\n  }\n  if (value.provider && typeof value.provider[feature] === \"function\") {\n    return value.provider;\n  }\n  return null;\n}\nfunction getProvider(value) {\n  if (value == null) {\n    return null;\n  }\n  return value.provider || null;\n}\n/**\n *  @_ignore:\n */\nasync function copyOverrides(arg, allowed) {\n  // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n  const overrides = (0, provider_js_1.copyRequest)(index_js_1.Typed.dereference(arg, \"overrides\"));\n  (0, index_js_3.assertArgument)(overrides.to == null || (allowed || []).indexOf(\"to\") >= 0, \"cannot override to\", \"overrides.to\", overrides.to);\n  (0, index_js_3.assertArgument)(overrides.data == null || (allowed || []).indexOf(\"data\") >= 0, \"cannot override data\", \"overrides.data\", overrides.data);\n  // Resolve any from\n  if (overrides.from) {\n    overrides.from = await (0, index_js_2.resolveAddress)(overrides.from);\n  }\n  return overrides;\n}\nexports.copyOverrides = copyOverrides;\n/**\n *  @_ignore:\n */\nasync function resolveArgs(_runner, inputs, args) {\n  // Recursively descend into args and resolve any addresses\n  const runner = getRunner(_runner, \"resolveName\");\n  const resolver = canResolve(runner) ? runner : null;\n  return await Promise.all(inputs.map((param, index) => {\n    return param.walkAsync(args[index], (type, value) => {\n      value = index_js_1.Typed.dereference(value, type);\n      if (type === \"address\") {\n        return (0, index_js_2.resolveAddress)(value, resolver);\n      }\n      return value;\n    });\n  }));\n}\nexports.resolveArgs = resolveArgs;\nfunction buildWrappedFallback(contract) {\n  const populateTransaction = async function (overrides) {\n    // If an overrides was passed in, copy it and normalize the values\n    const tx = await copyOverrides(overrides, [\"data\"]);\n    tx.to = await contract.getAddress();\n    const iface = contract.interface;\n    const noValue = (0, index_js_3.getBigInt)(tx.value || BN_0, \"overrides.value\") === BN_0;\n    const noData = (tx.data || \"0x\") === \"0x\";\n    if (iface.fallback && !iface.fallback.payable && iface.receive && !noData && !noValue) {\n      (0, index_js_3.assertArgument)(false, \"cannot send data to receive or send value to non-payable fallback\", \"overrides\", overrides);\n    }\n    (0, index_js_3.assertArgument)(iface.fallback || noData, \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n    // Only allow payable contracts to set non-zero value\n    const payable = iface.receive || iface.fallback && iface.fallback.payable;\n    (0, index_js_3.assertArgument)(payable || noValue, \"cannot send value to non-payable fallback\", \"overrides.value\", tx.value);\n    // Only allow fallback contracts to set non-empty data\n    (0, index_js_3.assertArgument)(iface.fallback || noData, \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n    return tx;\n  };\n  const staticCall = async function (overrides) {\n    const runner = getRunner(contract.runner, \"call\");\n    (0, index_js_3.assert)(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"call\"\n    });\n    const tx = await populateTransaction(overrides);\n    try {\n      return await runner.call(tx);\n    } catch (error) {\n      if ((0, index_js_3.isCallException)(error) && error.data) {\n        throw contract.interface.makeError(error.data, tx);\n      }\n      throw error;\n    }\n  };\n  const send = async function (overrides) {\n    const runner = contract.runner;\n    (0, index_js_3.assert)(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"sendTransaction\"\n    });\n    const tx = await runner.sendTransaction(await populateTransaction(overrides));\n    const provider = getProvider(contract.runner);\n    // @TODO: the provider can be null; make a custom dummy provider that will throw a\n    // meaningful error\n    return new wrappers_js_1.ContractTransactionResponse(contract.interface, provider, tx);\n  };\n  const estimateGas = async function (overrides) {\n    const runner = getRunner(contract.runner, \"estimateGas\");\n    (0, index_js_3.assert)(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"estimateGas\"\n    });\n    return await runner.estimateGas(await populateTransaction(overrides));\n  };\n  const method = async overrides => {\n    return await send(overrides);\n  };\n  (0, index_js_3.defineProperties)(method, {\n    _contract: contract,\n    estimateGas,\n    populateTransaction,\n    send,\n    staticCall\n  });\n  return method;\n}\nfunction buildWrappedMethod(contract, key) {\n  const getFragment = function (...args) {\n    const fragment = contract.interface.getFunction(key, args);\n    (0, index_js_3.assert)(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\"\n    });\n    return fragment;\n  };\n  const populateTransaction = async function (...args) {\n    const fragment = getFragment(...args);\n    // If an overrides was passed in, copy it and normalize the values\n    let overrides = {};\n    if (fragment.inputs.length + 1 === args.length) {\n      overrides = await copyOverrides(args.pop());\n    }\n    if (fragment.inputs.length !== args.length) {\n      throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n    }\n    const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n    return Object.assign({}, overrides, await (0, index_js_3.resolveProperties)({\n      to: contract.getAddress(),\n      data: contract.interface.encodeFunctionData(fragment, resolvedArgs)\n    }));\n  };\n  const staticCall = async function (...args) {\n    const result = await staticCallResult(...args);\n    if (result.length === 1) {\n      return result[0];\n    }\n    return result;\n  };\n  const send = async function (...args) {\n    const runner = contract.runner;\n    (0, index_js_3.assert)(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"sendTransaction\"\n    });\n    const tx = await runner.sendTransaction(await populateTransaction(...args));\n    const provider = getProvider(contract.runner);\n    // @TODO: the provider can be null; make a custom dummy provider that will throw a\n    // meaningful error\n    return new wrappers_js_1.ContractTransactionResponse(contract.interface, provider, tx);\n  };\n  const estimateGas = async function (...args) {\n    const runner = getRunner(contract.runner, \"estimateGas\");\n    (0, index_js_3.assert)(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"estimateGas\"\n    });\n    return await runner.estimateGas(await populateTransaction(...args));\n  };\n  const staticCallResult = async function (...args) {\n    const runner = getRunner(contract.runner, \"call\");\n    (0, index_js_3.assert)(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"call\"\n    });\n    const tx = await populateTransaction(...args);\n    let result = \"0x\";\n    try {\n      result = await runner.call(tx);\n    } catch (error) {\n      if ((0, index_js_3.isCallException)(error) && error.data) {\n        throw contract.interface.makeError(error.data, tx);\n      }\n      throw error;\n    }\n    const fragment = getFragment(...args);\n    return contract.interface.decodeFunctionResult(fragment, result);\n  };\n  const method = async (...args) => {\n    const fragment = getFragment(...args);\n    if (fragment.constant) {\n      return await staticCall(...args);\n    }\n    return await send(...args);\n  };\n  (0, index_js_3.defineProperties)(method, {\n    name: contract.interface.getFunctionName(key),\n    _contract: contract,\n    _key: key,\n    getFragment,\n    estimateGas,\n    populateTransaction,\n    send,\n    staticCall,\n    staticCallResult\n  });\n  // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n  Object.defineProperty(method, \"fragment\", {\n    configurable: false,\n    enumerable: true,\n    get: () => {\n      const fragment = contract.interface.getFunction(key);\n      (0, index_js_3.assert)(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"fragment\"\n      });\n      return fragment;\n    }\n  });\n  return method;\n}\nfunction buildWrappedEvent(contract, key) {\n  const getFragment = function (...args) {\n    const fragment = contract.interface.getEvent(key, args);\n    (0, index_js_3.assert)(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\"\n    });\n    return fragment;\n  };\n  const method = function (...args) {\n    return new PreparedTopicFilter(contract, getFragment(...args), args);\n  };\n  (0, index_js_3.defineProperties)(method, {\n    name: contract.interface.getEventName(key),\n    _contract: contract,\n    _key: key,\n    getFragment\n  });\n  // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n  Object.defineProperty(method, \"fragment\", {\n    configurable: false,\n    enumerable: true,\n    get: () => {\n      const fragment = contract.interface.getEvent(key);\n      (0, index_js_3.assert)(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"fragment\"\n      });\n      return fragment;\n    }\n  });\n  return method;\n}\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\nconst internal = Symbol.for(\"_ethersInternal_contract\");\nconst internalValues = new WeakMap();\nfunction setInternal(contract, values) {\n  internalValues.set(contract[internal], values);\n}\nfunction getInternal(contract) {\n  return internalValues.get(contract[internal]);\n}\nfunction isDeferred(value) {\n  return value && typeof value === \"object\" && \"getTopicFilter\" in value && typeof value.getTopicFilter === \"function\" && value.fragment;\n}\nasync function getSubInfo(contract, event) {\n  let topics;\n  let fragment = null;\n  // Convert named events to topicHash and get the fragment for\n  // events which need deconstructing.\n  if (Array.isArray(event)) {\n    const topicHashify = function (name) {\n      if ((0, index_js_3.isHexString)(name, 32)) {\n        return name;\n      }\n      const fragment = contract.interface.getEvent(name);\n      (0, index_js_3.assertArgument)(fragment, \"unknown fragment\", \"name\", name);\n      return fragment.topicHash;\n    };\n    // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n    topics = event.map(e => {\n      if (e == null) {\n        return null;\n      }\n      if (Array.isArray(e)) {\n        return e.map(topicHashify);\n      }\n      return topicHashify(e);\n    });\n  } else if (event === \"*\") {\n    topics = [null];\n  } else if (typeof event === \"string\") {\n    if ((0, index_js_3.isHexString)(event, 32)) {\n      // Topic Hash\n      topics = [event];\n    } else {\n      // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n      fragment = contract.interface.getEvent(event);\n      (0, index_js_3.assertArgument)(fragment, \"unknown fragment\", \"event\", event);\n      topics = [fragment.topicHash];\n    }\n  } else if (isDeferred(event)) {\n    // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n    topics = await event.getTopicFilter();\n  } else if (\"fragment\" in event) {\n    // ContractEvent; e.g. `contract.filter.Transfer`\n    fragment = event.fragment;\n    topics = [fragment.topicHash];\n  } else {\n    (0, index_js_3.assertArgument)(false, \"unknown event name\", \"event\", event);\n  }\n  // Normalize topics and sort TopicSets\n  topics = topics.map(t => {\n    if (t == null) {\n      return null;\n    }\n    if (Array.isArray(t)) {\n      const items = Array.from(new Set(t.map(t => t.toLowerCase())).values());\n      if (items.length === 1) {\n        return items[0];\n      }\n      items.sort();\n      return items;\n    }\n    return t.toLowerCase();\n  });\n  const tag = topics.map(t => {\n    if (t == null) {\n      return \"null\";\n    }\n    if (Array.isArray(t)) {\n      return t.join(\"|\");\n    }\n    return t;\n  }).join(\"&\");\n  return {\n    fragment,\n    tag,\n    topics\n  };\n}\nasync function hasSub(contract, event) {\n  const {\n    subs\n  } = getInternal(contract);\n  return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\nasync function getSub(contract, operation, event) {\n  // Make sure our runner can actually subscribe to events\n  const provider = getProvider(contract.runner);\n  (0, index_js_3.assert)(provider, \"contract runner does not support subscribing\", \"UNSUPPORTED_OPERATION\", {\n    operation\n  });\n  const {\n    fragment,\n    tag,\n    topics\n  } = await getSubInfo(contract, event);\n  const {\n    addr,\n    subs\n  } = getInternal(contract);\n  let sub = subs.get(tag);\n  if (!sub) {\n    const address = addr ? addr : contract;\n    const filter = {\n      address,\n      topics\n    };\n    const listener = log => {\n      let foundFragment = fragment;\n      if (foundFragment == null) {\n        try {\n          foundFragment = contract.interface.getEvent(log.topics[0]);\n        } catch (error) {}\n      }\n      // If fragment is null, we do not deconstruct the args to emit\n      if (foundFragment) {\n        const _foundFragment = foundFragment;\n        const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics) : [];\n        emit(contract, event, args, listener => {\n          return new wrappers_js_1.ContractEventPayload(contract, listener, event, _foundFragment, log);\n        });\n      } else {\n        emit(contract, event, [], listener => {\n          return new wrappers_js_1.ContractUnknownEventPayload(contract, listener, event, log);\n        });\n      }\n    };\n    let starting = [];\n    const start = () => {\n      if (starting.length) {\n        return;\n      }\n      starting.push(provider.on(filter, listener));\n    };\n    const stop = async () => {\n      if (starting.length == 0) {\n        return;\n      }\n      let started = starting;\n      starting = [];\n      await Promise.all(started);\n      provider.off(filter, listener);\n    };\n    sub = {\n      tag,\n      listeners: [],\n      start,\n      stop\n    };\n    subs.set(tag, sub);\n  }\n  return sub;\n}\n// We use this to ensure one emit resolves before firing the next to\n// ensure correct ordering (note this cannot throw and just adds the\n// notice to the event queu using setTimeout).\nlet lastEmit = Promise.resolve();\nasync function _emit(contract, event, args, payloadFunc) {\n  await lastEmit;\n  const sub = await hasSub(contract, event);\n  if (!sub) {\n    return false;\n  }\n  const count = sub.listeners.length;\n  sub.listeners = sub.listeners.filter(({\n    listener,\n    once\n  }) => {\n    const passArgs = Array.from(args);\n    if (payloadFunc) {\n      passArgs.push(payloadFunc(once ? null : listener));\n    }\n    try {\n      listener.call(contract, ...passArgs);\n    } catch (error) {}\n    return !once;\n  });\n  return count > 0;\n}\nasync function emit(contract, event, args, payloadFunc) {\n  try {\n    await lastEmit;\n  } catch (error) {}\n  const resultPromise = _emit(contract, event, args, payloadFunc);\n  lastEmit = resultPromise;\n  return await resultPromise;\n}\nconst passProperties = [\"then\"];\nclass BaseContract {\n  /**\n   *  The target to connect to.\n   *\n   *  This can be an address, ENS name or any [[Addressable]], such as\n   *  another contract. To get the resovled address, use the ``getAddress``\n   *  method.\n   */\n\n  /**\n   *  The contract Interface.\n   */\n\n  /**\n   *  The connected runner. This is generally a [[Provider]] or a\n   *  [[Signer]], which dictates what operations are supported.\n   *\n   *  For example, a **Contract** connected to a [[Provider]] may\n   *  only execute read-only operations.\n   */\n\n  /**\n   *  All the Events available on this contract.\n   */\n\n  /**\n   *  @_ignore:\n   */\n\n  /**\n   *  The fallback or receive function if any.\n   */\n\n  /**\n   *  Creates a new contract connected to %%target%% with the %%abi%% and\n   *  optionally connected to a %%runner%% to perform operations on behalf\n   *  of.\n   */\n  constructor(target, abi, runner, _deployTx) {\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"interface\", void 0);\n    _defineProperty(this, \"runner\", void 0);\n    _defineProperty(this, \"filters\", void 0);\n    _defineProperty(this, internal, void 0);\n    _defineProperty(this, \"fallback\", void 0);\n    (0, index_js_3.assertArgument)(typeof target === \"string\" || (0, index_js_2.isAddressable)(target), \"invalid value for Contract target\", \"target\", target);\n    if (runner == null) {\n      runner = null;\n    }\n    const iface = index_js_1.Interface.from(abi);\n    (0, index_js_3.defineProperties)(this, {\n      target,\n      runner,\n      interface: iface\n    });\n    Object.defineProperty(this, internal, {\n      value: {}\n    });\n    let addrPromise;\n    let addr = null;\n    let deployTx = null;\n    if (_deployTx) {\n      const provider = getProvider(runner);\n      // @TODO: the provider can be null; make a custom dummy provider that will throw a\n      // meaningful error\n      deployTx = new wrappers_js_1.ContractTransactionResponse(this.interface, provider, _deployTx);\n    }\n    let subs = new Map();\n    // Resolve the target as the address\n    if (typeof target === \"string\") {\n      if ((0, index_js_3.isHexString)(target)) {\n        addr = target;\n        addrPromise = Promise.resolve(target);\n      } else {\n        const resolver = getRunner(runner, \"resolveName\");\n        if (!canResolve(resolver)) {\n          throw (0, index_js_3.makeError)(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"resolveName\"\n          });\n        }\n        addrPromise = resolver.resolveName(target).then(addr => {\n          if (addr == null) {\n            throw new Error(\"TODO\");\n          }\n          getInternal(this).addr = addr;\n          return addr;\n        });\n      }\n    } else {\n      addrPromise = target.getAddress().then(addr => {\n        if (addr == null) {\n          throw new Error(\"TODO\");\n        }\n        getInternal(this).addr = addr;\n        return addr;\n      });\n    }\n    // Set our private values\n    setInternal(this, {\n      addrPromise,\n      addr,\n      deployTx,\n      subs\n    });\n    // Add the event filters\n    const filters = new Proxy({}, {\n      get: (target, _prop, receiver) => {\n        // Pass important checks (like `then` for Promise) through\n        if (passProperties.indexOf(_prop) >= 0) {\n          return Reflect.get(target, _prop, receiver);\n        }\n        const prop = String(_prop);\n        const result = this.getEvent(prop);\n        if (result) {\n          return result;\n        }\n        throw new Error(`unknown contract event: ${prop}`);\n      },\n      has: (target, prop) => {\n        // Pass important checks (like `then` for Promise) through\n        if (passProperties.indexOf(prop) >= 0) {\n          return Reflect.has(target, prop);\n        }\n        return Reflect.has(target, prop) || this.interface.hasEvent(String(prop));\n      }\n    });\n    (0, index_js_3.defineProperties)(this, {\n      filters\n    });\n    (0, index_js_3.defineProperties)(this, {\n      fallback: iface.receive || iface.fallback ? buildWrappedFallback(this) : null\n    });\n    // Return a Proxy that will respond to functions\n    return new Proxy(this, {\n      get: (target, _prop, receiver) => {\n        if (_prop in target || passProperties.indexOf(_prop) >= 0) {\n          return Reflect.get(target, _prop, receiver);\n        }\n        const prop = String(_prop);\n        const result = target.getFunction(prop);\n        if (result) {\n          return result;\n        }\n        throw new Error(`unknown contract method: ${prop}`);\n      },\n      has: (target, prop) => {\n        if (prop in target || passProperties.indexOf(prop) >= 0) {\n          return Reflect.has(target, prop);\n        }\n        return target.interface.hasFunction(String(prop));\n      }\n    });\n  }\n  /**\n   *  Return a new Contract instance with the same target and ABI, but\n   *  a different %%runner%%.\n   */\n  connect(runner) {\n    return new BaseContract(this.target, this.interface, runner);\n  }\n  /**\n   *  Return a new Contract instance with the same ABI and runner, but\n   *  a different %%target%%.\n   */\n  attach(target) {\n    return new BaseContract(target, this.interface, this.runner);\n  }\n  /**\n   *  Return the resolved address of this Contract.\n   */\n  async getAddress() {\n    return await getInternal(this).addrPromise;\n  }\n  /**\n   *  Return the dedployed bytecode or null if no bytecode is found.\n   */\n  async getDeployedCode() {\n    const provider = getProvider(this.runner);\n    (0, index_js_3.assert)(provider, \"runner does not support .provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"getDeployedCode\"\n    });\n    const code = await provider.getCode(await this.getAddress());\n    if (code === \"0x\") {\n      return null;\n    }\n    return code;\n  }\n  /**\n   *  Resolve to this Contract once the bytecode has been deployed, or\n   *  resolve immediately if already deployed.\n   */\n  async waitForDeployment() {\n    // We have the deployement transaction; just use that (throws if deployement fails)\n    const deployTx = this.deploymentTransaction();\n    if (deployTx) {\n      await deployTx.wait();\n      return this;\n    }\n    // Check for code\n    const code = await this.getDeployedCode();\n    if (code != null) {\n      return this;\n    }\n    // Make sure we can subscribe to a provider event\n    const provider = getProvider(this.runner);\n    (0, index_js_3.assert)(provider != null, \"contract runner does not support .provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"waitForDeployment\"\n    });\n    return new Promise((resolve, reject) => {\n      const checkCode = async () => {\n        try {\n          const code = await this.getDeployedCode();\n          if (code != null) {\n            return resolve(this);\n          }\n          provider.once(\"block\", checkCode);\n        } catch (error) {\n          reject(error);\n        }\n      };\n      checkCode();\n    });\n  }\n  /**\n   *  Return the transaction used to deploy this contract.\n   *\n   *  This is only available if this instance was returned from a\n   *  [[ContractFactory]].\n   */\n  deploymentTransaction() {\n    return getInternal(this).deployTx;\n  }\n  /**\n   *  Return the function for a given name. This is useful when a contract\n   *  method name conflicts with a JavaScript name such as ``prototype`` or\n   *  when using a Contract programatically.\n   */\n  getFunction(key) {\n    if (typeof key !== \"string\") {\n      key = key.format();\n    }\n    const func = buildWrappedMethod(this, key);\n    return func;\n  }\n  /**\n   *  Return the event for a given name. This is useful when a contract\n   *  event name conflicts with a JavaScript name such as ``prototype`` or\n   *  when using a Contract programatically.\n   */\n  getEvent(key) {\n    if (typeof key !== \"string\") {\n      key = key.format();\n    }\n    return buildWrappedEvent(this, key);\n  }\n  /**\n   *  @_ignore:\n   */\n  async queryTransaction(hash) {\n    // Is this useful?\n    throw new Error(\"@TODO\");\n  }\n  /**\n   *  Provide historic access to event data for %%event%% in the range\n   *  %%fromBlock%% (default: ``0``) to %%toBlock%% (default: ``\"latest\"``)\n   *  inclusive.\n   */\n  async queryFilter(event, fromBlock, toBlock) {\n    if (fromBlock == null) {\n      fromBlock = 0;\n    }\n    if (toBlock == null) {\n      toBlock = \"latest\";\n    }\n    const {\n      addr,\n      addrPromise\n    } = getInternal(this);\n    const address = addr ? addr : await addrPromise;\n    const {\n      fragment,\n      topics\n    } = await getSubInfo(this, event);\n    const filter = {\n      address,\n      topics,\n      fromBlock,\n      toBlock\n    };\n    const provider = getProvider(this.runner);\n    (0, index_js_3.assert)(provider, \"contract runner does not have a provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"queryFilter\"\n    });\n    return (await provider.getLogs(filter)).map(log => {\n      let foundFragment = fragment;\n      if (foundFragment == null) {\n        try {\n          foundFragment = this.interface.getEvent(log.topics[0]);\n        } catch (error) {}\n      }\n      if (foundFragment) {\n        return new wrappers_js_1.EventLog(log, this.interface, foundFragment);\n      } else {\n        return new provider_js_1.Log(log, provider);\n      }\n    });\n  }\n  /**\n   *  Add an event %%listener%% for the %%event%%.\n   */\n  async on(event, listener) {\n    const sub = await getSub(this, \"on\", event);\n    sub.listeners.push({\n      listener,\n      once: false\n    });\n    sub.start();\n    return this;\n  }\n  /**\n   *  Add an event %%listener%% for the %%event%%, but remove the listener\n   *  after it is fired once.\n   */\n  async once(event, listener) {\n    const sub = await getSub(this, \"once\", event);\n    sub.listeners.push({\n      listener,\n      once: true\n    });\n    sub.start();\n    return this;\n  }\n  /**\n   *  Emit an %%event%% calling all listeners with %%args%%.\n   *\n   *  Resolves to ``true`` if any listeners were called.\n   */\n  async emit(event, ...args) {\n    return await emit(this, event, args, null);\n  }\n  /**\n   *  Resolves to the number of listeners of %%event%% or the total number\n   *  of listeners if unspecified.\n   */\n  async listenerCount(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n      if (!sub) {\n        return 0;\n      }\n      return sub.listeners.length;\n    }\n    const {\n      subs\n    } = getInternal(this);\n    let total = 0;\n    for (const {\n      listeners\n    } of subs.values()) {\n      total += listeners.length;\n    }\n    return total;\n  }\n  /**\n   *  Resolves to the listeners subscribed to %%event%% or all listeners\n   *  if unspecified.\n   */\n  async listeners(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n      if (!sub) {\n        return [];\n      }\n      return sub.listeners.map(({\n        listener\n      }) => listener);\n    }\n    const {\n      subs\n    } = getInternal(this);\n    let result = [];\n    for (const {\n      listeners\n    } of subs.values()) {\n      result = result.concat(listeners.map(({\n        listener\n      }) => listener));\n    }\n    return result;\n  }\n  /**\n   *  Remove the %%listener%% from the listeners for %%event%% or remove\n   *  all listeners if unspecified.\n   */\n  async off(event, listener) {\n    const sub = await hasSub(this, event);\n    if (!sub) {\n      return this;\n    }\n    if (listener) {\n      const index = sub.listeners.map(({\n        listener\n      }) => listener).indexOf(listener);\n      if (index >= 0) {\n        sub.listeners.splice(index, 1);\n      }\n    }\n    if (listener == null || sub.listeners.length === 0) {\n      sub.stop();\n      getInternal(this).subs.delete(sub.tag);\n    }\n    return this;\n  }\n  /**\n   *  Remove all the listeners for %%event%% or remove all listeners if\n   *  unspecified.\n   */\n  async removeAllListeners(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n      if (!sub) {\n        return this;\n      }\n      sub.stop();\n      getInternal(this).subs.delete(sub.tag);\n    } else {\n      const {\n        subs\n      } = getInternal(this);\n      for (const {\n        tag,\n        stop\n      } of subs.values()) {\n        stop();\n        subs.delete(tag);\n      }\n    }\n    return this;\n  }\n  /**\n   *  Alias for [on].\n   */\n  async addListener(event, listener) {\n    return await this.on(event, listener);\n  }\n  /**\n   *  Alias for [off].\n   */\n  async removeListener(event, listener) {\n    return await this.off(event, listener);\n  }\n  /**\n   *  Create a new Class for the %%abi%%.\n   */\n  static buildClass(abi) {\n    class CustomContract extends BaseContract {\n      constructor(address, runner = null) {\n        super(address, abi, runner);\n      }\n    }\n    return CustomContract;\n  }\n  /**\n   *  Create a new BaseContract with a specified Interface.\n   */\n  static from(target, abi, runner) {\n    if (runner == null) {\n      runner = null;\n    }\n    const contract = new this(target, abi, runner);\n    return contract;\n  }\n}\nexports.BaseContract = BaseContract;\nfunction _ContractBase() {\n  return BaseContract;\n}\n/**\n *  A [[BaseContract]] with no type guards on its methods or events.\n */\nclass Contract extends _ContractBase() {}\nexports.Contract = Contract;","map":{"version":3,"names":["index_js_1","require","index_js_2","provider_js_1","index_js_3","wrappers_js_1","BN_0","BigInt","canCall","value","call","canEstimate","estimateGas","canResolve","resolveName","canSend","sendTransaction","_filter","WeakMap","PreparedTopicFilter","constructor","contract","fragment","args","_classPrivateFieldInitSpec","writable","_defineProperty","defineProperties","inputs","length","Error","runner","getRunner","resolver","_classPrivateFieldSet","resolvedArgs","Promise","all","map","param","index","arg","walkAsync","type","resolveAddress","interface","encodeFilterTopics","getTopicFilter","_classPrivateFieldGet","feature","provider","getProvider","copyOverrides","allowed","overrides","copyRequest","Typed","dereference","assertArgument","to","indexOf","data","from","exports","resolveArgs","_runner","buildWrappedFallback","populateTransaction","tx","getAddress","iface","noValue","getBigInt","noData","fallback","payable","receive","staticCall","assert","operation","error","isCallException","makeError","send","ContractTransactionResponse","method","_contract","buildWrappedMethod","key","getFragment","getFunction","pop","Object","assign","resolveProperties","encodeFunctionData","result","staticCallResult","decodeFunctionResult","constant","name","getFunctionName","_key","defineProperty","configurable","enumerable","get","buildWrappedEvent","getEvent","getEventName","internal","Symbol","for","internalValues","setInternal","values","set","getInternal","isDeferred","getSubInfo","event","topics","Array","isArray","topicHashify","isHexString","topicHash","e","t","items","Set","toLowerCase","sort","tag","join","hasSub","subs","getSub","addr","sub","address","filter","listener","log","foundFragment","_foundFragment","decodeEventLog","emit","ContractEventPayload","ContractUnknownEventPayload","starting","start","push","on","stop","started","off","listeners","lastEmit","resolve","_emit","payloadFunc","count","once","passArgs","resultPromise","passProperties","BaseContract","target","abi","_deployTx","isAddressable","Interface","addrPromise","deployTx","Map","then","filters","Proxy","_prop","receiver","Reflect","prop","String","has","hasEvent","hasFunction","connect","attach","getDeployedCode","code","getCode","waitForDeployment","deploymentTransaction","wait","reject","checkCode","format","func","queryTransaction","hash","queryFilter","fromBlock","toBlock","getLogs","EventLog","Log","listenerCount","total","concat","splice","delete","removeAllListeners","addListener","removeListener","buildClass","CustomContract","_ContractBase","Contract"],"sources":["../../src.ts/contract/contract.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}