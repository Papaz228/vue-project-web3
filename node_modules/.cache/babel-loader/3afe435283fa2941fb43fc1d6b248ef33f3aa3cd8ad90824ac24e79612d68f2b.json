{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      newSkill: \"\",\n      userSkills: [],\n      userRatings: [],\n      summarize: 0,\n      profileImageURLs: []\n    };\n  },\n  methods: {\n    ...mapActions(['fetchUserProfile', 'fetchAllUserSkills', 'fetchAllUserRatings', 'addSkill', 'getUserSkillRatingsAverage', 'getUserTokenLinks']),\n    async handleProfileCreated() {\n      await this.fetchUserProfile(this.$store.state.userAddress);\n    },\n    async addUserSkill() {\n      if (!this.newSkill) {\n        console.error('Please enter a skill.');\n        return;\n      }\n      const success = await this.addSkill(this.newSkill);\n      if (success) {\n        console.log('Skill added successfully!');\n      } else {\n        console.error('Failed to add skill.');\n      }\n      this.userSkills = await this.fetchAllUserSkills(this.$store.state.userAddress);\n      this.newSkill = '';\n    }\n  },\n  async mounted() {\n    this.trustRequests = await this.fetchAllUserSkills(this.$store.state.userAddress);\n  }\n};","map":{"version":3,"sources":["/home/alan/VisualStudioProjects/BU/vue-proj1/src/pages/RequestConfirmationPage.vue"],"names":[],"mappings":"AAoDA,SAAS,UAAS,QAAS,MAAM;AAEjC,eAAe;EACb,IAAI,CAAA,EAAG;IACL,OAAO;MACL,QAAQ,EAAE,EAAE;MACZ,UAAU,EAAE,EAAE;MACd,WAAW,EAAE,EAAE;MACf,SAAS,EAAE,CAAC;MACZ,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACD,OAAO,EAAE;IACP,GAAG,UAAU,CAAC,CAAC,kBAAkB,EAAC,oBAAoB,EAAE,qBAAqB,EAAE,UAAU,EAAE,4BAA4B,EAAC,mBAAmB,CAAC,CAAC;IAC7I,MAAM,oBAAoB,CAAA,EAAG;MAC3B,MAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC;IAC5D,CAAC;IACD,MAAM,YAAY,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;QAClB,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC;QACtC;MACF;MAEA,MAAM,OAAM,GAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;MAClD,IAAI,OAAO,EAAE;QACT,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;MAC1C,CAAA,MAAO;QACL,OAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC;MACvC;MACF,IAAI,CAAC,UAAS,GAAI,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAA;MAC7E,IAAI,CAAC,QAAO,GAAI,EAAE;IACpB;EACF,CAAC;EACD,MAAM,OAAO,CAAA,EAAG;IACd,IAAI,CAAC,aAAY,GAAI,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC;EAEnF;AACF,CAAC","sourcesContent":["<template>\n  <div>\n    <h2>User Profile</h2>\n    <template v-if=\"$store.state.userProfile && $store.state.userProfile.name && $store.state.userProfile.contactInformation && $store.state.userProfile.socialLinks\">\n      <div>\n        <label>Name:</label>\n        <span>{{ $store.state.userProfile.name }}</span>\n      </div>\n      <div>\n        <label>Contact Information:</label>\n        <span>{{ $store.state.userProfile.contactInformation }}</span>\n      </div>\n      <div>\n        <label>Social Links:</label>\n        <span>{{ $store.state.userProfile.socialLinks }}</span>\n      </div>\n      <div>\n        <label>User Address:</label>\n        <span>{{ $store.state.userProfile.userProfileAddress }}</span>\n      </div>\n      <div>\n        <label>Add Skill:</label>\n        <input v-model=\"newSkill\" type=\"text\" placeholder=\"Enter Skill\" />\n        <button @click=\"addUserSkill\">Add Skill</button>\n      </div>\n      <div>\n        <div v-for=\"(url, index) in profileImageURLs\" :key=\"index\">\n          <img :src=\"url\" :alt=\"'Profile Image ' + (index + 1)\" />\n        </div>\n      </div>\n      <div v-if=\"userSkills.length > 0\">\n        <h3>User Skills:</h3>\n        <ul>\n          <li v-for=\"skill in userSkills\" :key=\"skill\">{{ skill }}</li>\n        </ul>\n      </div>\n      <div v-if=\"userRatings.length > 0\">\n        <h3>User Ratings:</h3>\n        <h4>Summary rating: {{ summarize }}</h4>\n        <ul>\n          <li v-for=\"rate in userRatings\" :key=\"rate\">{{ rate }}</li>\n        </ul>\n      </div>\n      \n    </template>\n    <template v-else>\n      <h3>No profile found.</h3>\n      <create-profile @profile-created=\"handleProfileCreated\" />\n    </template>\n  </div>\n</template>\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n  data() {\n    return {\n      newSkill: \"\",\n      userSkills: [],\n      userRatings: [],\n      summarize: 0,\n      profileImageURLs: []\n    };\n  },\n  methods: {\n    ...mapActions(['fetchUserProfile','fetchAllUserSkills', 'fetchAllUserRatings', 'addSkill', 'getUserSkillRatingsAverage','getUserTokenLinks']),\n    async handleProfileCreated() {\n      await this.fetchUserProfile(this.$store.state.userAddress);\n    },\n    async addUserSkill() {\n      if (!this.newSkill) {\n        console.error('Please enter a skill.');\n        return;\n      }\n\n      const success = await this.addSkill(this.newSkill);\n      if (success) {\n          console.log('Skill added successfully!');\n        } else {\n          console.error('Failed to add skill.');\n        }\n      this.userSkills = await this.fetchAllUserSkills(this.$store.state.userAddress)\n      this.newSkill = '';\n    },\n  },\n  async mounted() {\n    this.trustRequests = await this.fetchAllUserSkills(this.$store.state.userAddress);\n  \n  },\n};\n</script>"],"sourceRoot":""},"metadata":{},"sourceType":"module","externalDependencies":[]}