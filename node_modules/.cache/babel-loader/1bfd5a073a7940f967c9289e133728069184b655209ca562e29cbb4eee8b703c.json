{"ast":null,"code":"\"use strict\";\n\n/**\n *  A fundamental building block of Ethereum is the underlying\n *  cryptographic primitives.\n *\n *  @_section: api/crypto:Cryptographic Functions   [about-crypto]\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lock = exports.Signature = exports.SigningKey = exports.scryptSync = exports.scrypt = exports.pbkdf2 = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.randomBytes = exports.computeHmac = void 0;\nnull;\n// We import all these so we can export lock()\nconst hmac_js_1 = require(\"./hmac.js\");\nObject.defineProperty(exports, \"computeHmac\", {\n  enumerable: true,\n  get: function () {\n    return hmac_js_1.computeHmac;\n  }\n});\nconst keccak_js_1 = require(\"./keccak.js\");\nObject.defineProperty(exports, \"keccak256\", {\n  enumerable: true,\n  get: function () {\n    return keccak_js_1.keccak256;\n  }\n});\nconst ripemd160_js_1 = require(\"./ripemd160.js\");\nObject.defineProperty(exports, \"ripemd160\", {\n  enumerable: true,\n  get: function () {\n    return ripemd160_js_1.ripemd160;\n  }\n});\nconst pbkdf2_js_1 = require(\"./pbkdf2.js\");\nObject.defineProperty(exports, \"pbkdf2\", {\n  enumerable: true,\n  get: function () {\n    return pbkdf2_js_1.pbkdf2;\n  }\n});\nconst random_js_1 = require(\"./random.js\");\nObject.defineProperty(exports, \"randomBytes\", {\n  enumerable: true,\n  get: function () {\n    return random_js_1.randomBytes;\n  }\n});\nconst scrypt_js_1 = require(\"./scrypt.js\");\nObject.defineProperty(exports, \"scrypt\", {\n  enumerable: true,\n  get: function () {\n    return scrypt_js_1.scrypt;\n  }\n});\nObject.defineProperty(exports, \"scryptSync\", {\n  enumerable: true,\n  get: function () {\n    return scrypt_js_1.scryptSync;\n  }\n});\nconst sha2_js_1 = require(\"./sha2.js\");\nObject.defineProperty(exports, \"sha256\", {\n  enumerable: true,\n  get: function () {\n    return sha2_js_1.sha256;\n  }\n});\nObject.defineProperty(exports, \"sha512\", {\n  enumerable: true,\n  get: function () {\n    return sha2_js_1.sha512;\n  }\n});\nvar signing_key_js_1 = require(\"./signing-key.js\");\nObject.defineProperty(exports, \"SigningKey\", {\n  enumerable: true,\n  get: function () {\n    return signing_key_js_1.SigningKey;\n  }\n});\nvar signature_js_1 = require(\"./signature.js\");\nObject.defineProperty(exports, \"Signature\", {\n  enumerable: true,\n  get: function () {\n    return signature_js_1.Signature;\n  }\n});\n/**\n *  Once called, prevents any future change to the underlying cryptographic\n *  primitives using the ``.register`` feature for hooks.\n */\nfunction lock() {\n  hmac_js_1.computeHmac.lock();\n  keccak_js_1.keccak256.lock();\n  pbkdf2_js_1.pbkdf2.lock();\n  random_js_1.randomBytes.lock();\n  ripemd160_js_1.ripemd160.lock();\n  scrypt_js_1.scrypt.lock();\n  scrypt_js_1.scryptSync.lock();\n  sha2_js_1.sha256.lock();\n  sha2_js_1.sha512.lock();\n  random_js_1.randomBytes.lock();\n}\nexports.lock = lock;","map":{"version":3,"sources":["../../src.ts/crypto/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n *  A fundamental building block of Ethereum is the underlying\n *  cryptographic primitives.\n *\n *  @_section: api/crypto:Cryptographic Functions   [about-crypto]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lock = exports.Signature = exports.SigningKey = exports.scryptSync = exports.scrypt = exports.pbkdf2 = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.randomBytes = exports.computeHmac = void 0;\nnull;\n// We import all these so we can export lock()\nconst hmac_js_1 = require(\"./hmac.js\");\nObject.defineProperty(exports, \"computeHmac\", { enumerable: true, get: function () { return hmac_js_1.computeHmac; } });\nconst keccak_js_1 = require(\"./keccak.js\");\nObject.defineProperty(exports, \"keccak256\", { enumerable: true, get: function () { return keccak_js_1.keccak256; } });\nconst ripemd160_js_1 = require(\"./ripemd160.js\");\nObject.defineProperty(exports, \"ripemd160\", { enumerable: true, get: function () { return ripemd160_js_1.ripemd160; } });\nconst pbkdf2_js_1 = require(\"./pbkdf2.js\");\nObject.defineProperty(exports, \"pbkdf2\", { enumerable: true, get: function () { return pbkdf2_js_1.pbkdf2; } });\nconst random_js_1 = require(\"./random.js\");\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return random_js_1.randomBytes; } });\nconst scrypt_js_1 = require(\"./scrypt.js\");\nObject.defineProperty(exports, \"scrypt\", { enumerable: true, get: function () { return scrypt_js_1.scrypt; } });\nObject.defineProperty(exports, \"scryptSync\", { enumerable: true, get: function () { return scrypt_js_1.scryptSync; } });\nconst sha2_js_1 = require(\"./sha2.js\");\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha2_js_1.sha256; } });\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha2_js_1.sha512; } });\nvar signing_key_js_1 = require(\"./signing-key.js\");\nObject.defineProperty(exports, \"SigningKey\", { enumerable: true, get: function () { return signing_key_js_1.SigningKey; } });\nvar signature_js_1 = require(\"./signature.js\");\nObject.defineProperty(exports, \"Signature\", { enumerable: true, get: function () { return signature_js_1.Signature; } });\n/**\n *  Once called, prevents any future change to the underlying cryptographic\n *  primitives using the ``.register`` feature for hooks.\n */\nfunction lock() {\n    hmac_js_1.computeHmac.lock();\n    keccak_js_1.keccak256.lock();\n    pbkdf2_js_1.pbkdf2.lock();\n    random_js_1.randomBytes.lock();\n    ripemd160_js_1.ripemd160.lock();\n    scrypt_js_1.scrypt.lock();\n    scrypt_js_1.scryptSync.lock();\n    sha2_js_1.sha256.lock();\n    sha2_js_1.sha512.lock();\n    random_js_1.randomBytes.lock();\n}\nexports.lock = lock;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script","externalDependencies":[]}